#BlueJ class context
comment0.target=TransportadoraNormal
comment1.params=
comment1.target=TransportadoraNormal()
comment1.text=\r\n\ Construtor\ por\ Omissao\r\n
comment10.params=o
comment10.target=boolean\ equals(java.lang.Object)
comment10.text=\r\n\ Verifica\ se\ 2\ Objects\ sao\ iguais\r\n\r\n\ @return\ true\ se\ Object\ for\ igual\ a\ TransportadoraNormal\r\n
comment11.params=
comment11.target=TransportadoraNormal\ clone()
comment11.text=\r\n\ Cria\ c\u00C3\u00B3pia\ da\ Transportadora\r\n\r\n\ @return\ Transportadora\ correspondente\ \u00C3\u00A0\ sua\ C\u00C3\u00B3pia\r\n
comment2.params=a\ b\ g\ c\ r\ p
comment2.target=TransportadoraNormal(java.lang.String,\ java.lang.String,\ Models.Utilizador.GPS,\ java.lang.String,\ double,\ double)
comment2.text=\r\n\ Construtor\ Parametrizado\ de\ TransportadoraNormal\r\n\ Aceita\ como\ parametros\ os\ valores\ para\ cada\ Variavel\ de\ Instancia\r\n
comment3.params=t
comment3.target=TransportadoraNormal(TransportadoraNormal)
comment3.text=\r\n\ Construtor\ de\ copia\ de\ uma\ TransportadoraNormal\r\n\ Aceita\ como\ parametros\ outra\ TransportadoraNormal\ e\ utiliza\ os\ metodos\r\n\ de\ acesso\ aos\ valores\ das\ Variaveis\ de\ Instancia\r\n
comment4.params=p
comment4.target=double\ precoTransporte(Models.Sistema.PedidoLoja)
comment4.text=\r\n\ Calcula\ o\ preco\ que\ estara\ associado\ ao\ transporte\ do\ Pedido.\ Esse\ preco\r\n\ sera\ afetado\ por\ fatores\ como\ distancia\ total\ a\ percorrer,\ uma\ taxa\ associada\ ao\ peso\ que\r\n\ a\ encomenda\ tem\ .Uma\ vez\ que\ nunca\ podera\ transportar\ medicamentos,\ nao\ tem\ nenhuma\ taxa\ associada\r\n\ ao\ transporte\ de\ medicamentos\r\n\r\n\ @param\ p\ correspondente\ ao\ PedidoLoja\r\n\ @return\ do\ preco\ total\ do\ transporte\r\n
comment5.params=p
comment5.target=double\ tempoTransporte(Models.Sistema.PedidoLoja)
comment5.text=\r\n\ Determina\ o\ tempo\ de\ transporte\ de\ uma\ Encomenda\ a\ um\ Utilizador.\r\n\ Este\ tempo\ sera\ afetado\ por\ fatores\ como\ distancias\ quer\ a\ loja\ quer\ ao\ utilizador\ e\ do\ tempo\ de\ espera\ na\ fila\ de\ uma\ loja\r\n\ (caso\ esta\ exista).\ Para\ alem\ disso,\ decidimos\ inserir\ fatores\ de\ aleatoriedade\ que\ afetarao\ o\ tempo\ de\ transporte.\r\n\ Fatores\ como\ estado\ do\ clima,\ estado\ do\ pavimento\ e\ transito\ sao\ fatores\ que\ achamos\ adequados\ e\ realistas\ para\r\n\ afetar\ o\ tempo\ de\ transporte.\r\n\r\n\ @param\ p\ correspondente\ ao\ PedidoLoja\r\n\ @return\ tempo\ associado\ ao\ Transporte\ da\ encomenda\r\n
comment6.params=
comment6.target=boolean\ aceitoTransporteMedicamentos()
comment6.text=\r\n\ Uma\ vez\ que\ \u00E9\ uma\ transportadora\ normal,\ nunca\ ira\ transportar\ medicamentos\r\n\r\n\ @return\ false\ sempre\r\n
comment7.params=p
comment7.target=Models.Sistema.I_PedidosTransportadores\ ocupaTransportadora(Models.Sistema.PedidoLoja)
comment7.text=\r\n\ Ocupa\ Transportadora\ com\ um\ Pedido,\ indicando\ o\ tempo\ previsto\ de\ transporte\r\n\ e\ criando\ um\ Pedido\ Transportadora\ com\ base\ no\ Peido\ Loja\r\n\r\n\ @param\ p\ correspondente\ ao\ Pedido\ da\ Loja\r\n\ @return\ PedidoTransportadora\ criado\r\n
comment8.params=p
comment8.target=boolean\ aceitaCaracteristicasEncomenda(Models.Sistema.PedidoLoja)
comment8.text=\r\n\ Determina\ se\ aceita\ caracteristicas\ da\ encomenda,\ caso\ esta\ contenha\ algum\ tipo\ de\r\n\ medicamento\r\n\r\n\ @param\ p\ correspondente\ ao\ PedidoLoja\r\n\ @return\ true\ se\ aceitar\ transportar\r\n
comment9.params=
comment9.target=java.lang.String\ toString()
comment9.text=\r\n\ Permite\ apresentar\ no\ ecra\ as\ informacoes\ necessarias\r\n\r\n\ @return\ String\ com\ informacao\ da\ Classe\r\n
numComments=12
