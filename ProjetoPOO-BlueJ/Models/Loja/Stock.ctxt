#BlueJ class context
comment0.target=Stock
comment1.params=
comment1.target=Stock()
comment1.text=\r\n\ Construtor\ por\ Omissao\r\n
comment10.params=
comment10.target=java.util.List\ getListaProdutos()
comment10.text=\r\n\ Devolve\ lista\ com\ todos\ os\ produtos\ presentes\ no\ Stock\r\n\r\n\ @return\ lista\ com\ todos\ Produtos\r\n
comment11.params=
comment11.target=java.util.List\ getMedicamentos()
comment11.text=\r\n\ Devolve\ lista\ com\ todos\ os\ Produtos\ que\ sao\ medicamentos\ no\ Stock\r\n\r\n\ @return\ lista\ com\ todos\ os\ Medicamentos\r\n
comment12.params=
comment12.target=java.lang.String\ toString()
comment12.text=\r\n\ Permite\ apresentar\ no\ ecra\ as\ informacoes\ necessarias\r\n\r\n\ @return\ String\ com\ informacao\ da\ Classe\r\n
comment13.params=o
comment13.target=boolean\ equals(java.lang.Object)
comment13.text=\r\n\ Verifica\ se\ 2\ Objects\ sao\ iguais\r\n\r\n\ @return\ true\ se\ Object\ for\ igual\ ao\ Stock\r\n
comment14.params=
comment14.target=Stock\ clone()
comment14.text=\r\n\ Fun\u00C3\u00A7ao\ que\ clona\ um\ Stock\r\n\ @return\ clone\ do\ Stock\r\n
comment2.params=stock
comment2.target=Stock(java.util.Map)
comment2.text=\r\n\ Construtor\ Parametrizado\ de\ Stock\r\n\ Aceita\ como\ parametros\ os\ valores\ para\ cada\ Variavel\ de\ Instancia\r\n
comment3.params=s
comment3.target=Stock(Stock)
comment3.text=\r\n\ Construtor\ de\ copia\ de\ uma\ Stock\r\n\ Aceita\ como\ parametros\ outra\ Stock\ e\ utiliza\ os\ m\u00E9todos\r\n\ de\ acesso\ aos\ valores\ das\ Variaveis\ de\ Instancia\r\n
comment4.params=
comment4.target=java.util.Map\ getStock()
comment4.text=\r\n\ Devolve\ o\ Stock\ de\ Produtos,\ representado\ por\ um\ Map\ onde\r\n\ as\ Keys\ sao\ o\ codigo\ do\ Produto\ e\ os\ Values\ sao\ os\ Produtos\r\n\r\n\ @return\ Map\ com\ os\ Produtos\ e\ os\ seus\ codigos\r\n
comment5.params=stock
comment5.target=void\ setStock(java.util.Map)
comment5.text=\r\n\ Definir\ o\ novo\ Stock\r\n\r\n\ @param\ stock\ correspondente\ ao\ novo\ Map\ que\ representara\ o\ Stock\r\n
comment6.params=codProduto
comment6.target=Produto\ getProduto(java.lang.String)
comment6.text=\r\n\ Dado\ um\ codigo\ de\ um\ Produto\ tentar\ devolver\ o\ Produto\ associado\ a\ esse\ codigo\r\n\r\n\ @param\ codProduto\ correspondente\ ao\ codigo\ do\ produto\r\n\ @return\ Produto\ associado\ ao\ codigo\ fornecido\r\n\ @throws\ ProdutoNotFoundException\ caso\ o\ codigo\ do\ produto\ nao\ exista\ nao\ stock\r\n
comment7.params=p
comment7.target=void\ addStock(Produto)
comment7.text=\r\n\ Adicionar\ um\ Produto\ ao\ stock\r\n\r\n\ @param\ p\ correspondente\ ao\ Produto\ a\ adiconar\r\n
comment8.params=cod
comment8.target=java.lang.String\ removeProduto(java.lang.String)
comment8.text=\r\n\ Dado\ um\ codigo\ de\ um\ Produto,\ vai\ ao\ Stock\ e\ caso\ esse\ codigo\r\n\ esteja\ associado\ a\ um\ Produto\ ira\ remove-lo\ do\ Stock\r\n\r\n\ @param\ cod\ correspondente\ ao\ codigo\ do\ Produto\ que\ se\ pretende\ remover\r\n\ @return\ se\ porduto\ foi\ removido\ com\ sucesso\ ou\ se\ na\ existe\r\n
comment9.params=
comment9.target=int\ tamStock()
comment9.text=\r\n\ Devolve\ tamanho\ do\ Stock\r\n\r\n\ @return\ tamanho\ do\ Stock\r\n
numComments=15
